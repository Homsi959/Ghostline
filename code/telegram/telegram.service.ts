import { Injectable, OnModuleInit } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import { TELEGRAM_TOKEN } from 'code/common/constants';
import { Telegraf } from 'telegraf';

@Injectable()
export class TelegramService implements OnModuleInit {
  private bot: Telegraf;

  /**
   * –°–æ–∑–¥–∞—ë—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
   *
   * @param config –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
   */
  constructor(private config: ConfigService) {}

  async onModuleInit() {
    const token = this.config.get<string>(TELEGRAM_TOKEN);

    if (!token) {
      //   this.logger.error(
      //     `[TelegramService] - TelegramService is not initialized. Token is not provided.`,
      //   );
      return;
    }

    this.bot = new Telegraf(token);

    this.bot.start((ctx) => ctx.reply('–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π NestJS-–±–æ—Ç ü§ñ'));
    this.bot.help((ctx) =>
      ctx.reply('–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n/start - –ó–∞–ø—É—Å–∫\n/help - –ü–æ–º–æ—â—å'),
    );

    await this.bot.launch();
  }
}
