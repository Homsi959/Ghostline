import { Hears, Start, Update } from 'nestjs-telegraf';
import { Context, Markup } from 'telegraf';
import { UsersRepository } from 'code/database/repository/users.repository';
import { BUTTONS } from './telegram.buttons';
import { MESSAGES } from './telegram.messages';
import { TelegramProfilesRepository } from 'code/database/repository/telegramProfiles.repository';

@Update()
export class TelegramUpdate {
  /**
   * @param usersRepo - –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
   * @param tgProfilesRepo - –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ—Ñ–∏–ª–µ–π Telegram.
   */
  constructor(
    private readonly usersRepo: UsersRepository,
    private readonly tgProfilesRepo: TelegramProfilesRepository,
  ) {}

  /**
   * –ú–µ—Ç–æ–¥, –≤—ã–∑—ã–≤–∞–µ–º—ã–π –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞.
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
   * @param ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
   */
  @Start()
  async start(ctx: Context) {
    if ('message' in ctx.update) {
      const user = ctx.update.message.from;
      const { id } = user;
      // –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º, –µ—Å—Ç—å –ª–∏ Telegram –ø—Ä–æ—Ñ–∏–ª—å
      const telegramID = await this.tgProfilesRepo.getTelegramProfileById(id);

      // –ï—Å–ª–∏ –Ω–µ—Ç, –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î –∏ Telegram –ø—Ä–æ—Ñ–∏–ª—å
      if (!telegramID) {
        const userID = await this.usersRepo.createUser();

        // –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å —Ç–æ–ª—å–∫–æ –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –µ—Å—Ç—å id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (userID) {
          const telegramProfile = {
            user_id: userID,
            ...user,
          };

          // –°–æ–∑–¥–∞–Ω–∏–µ Telegram –ø—Ä–æ—Ñ–∏–ª—è
          await this.tgProfilesRepo.createTelegramProfile(telegramProfile);
        }
      }
    }

    await ctx.reply(
      MESSAGES.WELCOME,
      Markup.keyboard([BUTTONS.MAIN_MENU]).resize(),
    );
    await this.getMenu(ctx);
  }

  /**
   * –ú–µ—Ç–æ–¥, –≤—ã–∑—ã–≤–∞–µ–º—ã–π –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é".
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏, –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –∫–∞–Ω–∞–ª.
   * @param ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
   */
  @Hears(BUTTONS.MAIN_MENU)
  async getMenu(ctx: Context) {
    await ctx.reply(
      MESSAGES.SERVER_INFO,
      Markup.inlineKeyboard([
        [Markup.button.url('üíé –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', 'https://your-vpn-link.com')],
        [Markup.button.callback('üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å', 'update_status')],
        [Markup.button.url('üì¢ –ù–∞—à –∫–∞–Ω–∞–ª', 'https://t.me/YouFastVPN')],
      ]),
    );
  }

  // @On('text')
  // async getMessage(@Message('text') text: string, @Ctx() ctx: Context) {
  //   console.log(text);
  // }
}
